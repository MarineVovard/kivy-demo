#:kivy 1.8.0
#:import KivyLexer kivy.extras.highlight.KivyLexer
#:import Factory kivy.factory.Factory
#:import path os.path
#:import path_demo kivydemo.path_demo

<ShowcaseFullScreen>:
    PhytecBackground: 
        SmallerWhiteBackground: 
            id: template_background
            BoxLayout:
                orientation:"horizontal"
                size_hint: 1,0.05
                TextLabel: 
                    id: title
                    text: "[size=20sp]Informations[/size]"
                
                Button:
                    text: "Home"
                    size_hint_x: 0.1
                    on_release: root.manager.current='home'

            BoxLayout:
                orientation: 'vertical'
                canvas.before:
                    Color:
                        rgb: .6, .6, .6
                    Rectangle:
                        size: self.size
                        source: path.join(path_demo,'showcase/data/images/background.png')
                        pos: self.pos

                ActionBar:
                    ActionView:
                        id: av
                        ActionPrevious:
                            title: 'Showcase' + ('' if not root.current_title else ' - {}'.format(root.current_title))
                            on_release: root.go_hierarchy_previous()
                            app_icon: ''
                            with_previous: False
                        ActionSpinner:
                            id: spnr
                            important: True #priority to display
                            text: 'Jump to Screen'
                            values: root.screen_names # all the names of the screen
                            on_text:
                                if sm.current != args[1]:\
                                idx = root.screen_names.index(args[1]);\
                                root.go_screen(idx)
                        ActionToggleButton:
                            text: 'Toggle sourcecode'
                            icon: path.join(path_demo,'showcase/data/icons/bug.png')
                            on_release: root.toggle_source_code()
                        ActionButton:
                            text: 'Previous screen'
                            icon: path.join(path_demo,'showcase/data/icons/chevron-left.png')
                            on_release: root.go_previous_screen()
                        ActionButton:
                            text: 'Next screen'
                            icon: path.join(path_demo,'showcase/data/icons/chevron-right.png')
                            on_release: root.go_next_screen()
                            important: True
                ScrollView:
                    id: sv
                    size_hint_y: None
                    height: 0
                    CodeInput:
                        id: sourcecode
                        lexer: KivyLexer()
                        text: root.sourcecode
                        readonly: True
                        size_hint_y: None
                        font_size: '12sp'
                        height: self.minimum_height
                ScreenManager:
                    id: sm
                    on_current_screen:
                        spnr.text = args[1].name
                        idx = root.screen_names.index(args[1].name)
                        if idx > -1: root.hierarchy.append(idx)

<ActionSpinnerOptions@SpinnerOption>
    background_color: .4, .4, .4, 1
<ActionSpinner@Spinner+ActionItem>
    canvas.before:
        Color:
            rgba: 0.128, 0.128, 0.128, 1
        Rectangle:
            size: self.size
            pos: self.pos
    border: 27, 20, 12, 12
    background_normal: 'atlas://data/images/defaulttheme/action_group'
    option_cls: Factory.ActionSpinnerOptions

<ActionDropdown>:
    on_size: self.width = '220dp'

<ShowcaseScreen>:
    ScrollView:
        do_scroll_x: False
        do_scroll_y: False if root.fullscreen else (content.height > root.height - dp(16))
        AnchorLayout:
            size_hint_y: None
            height: root.height if root.fullscreen else max(root.height, content.height)
            GridLayout:
                id: content
                cols: 1
                spacing: '8dp'
                padding: '8dp'
                size_hint: (1, 1) if root.fullscreen else (.8, None)
                height: self.height if root.fullscreen else self.minimum_height



